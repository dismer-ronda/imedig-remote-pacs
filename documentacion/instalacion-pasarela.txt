- Configurar idioma del sistema

	dpkg-reconfigure locales

		Seleccionar es_ES.UTF-8
	
	update-locale
		
		Verificar que el fichero /etc/default/locale contiene lo siguiente, si no, ponerlo:
		
			LANG=es_ES.UTF-8

- Fijar la zona horaria
	
	nano /etc/timezone			
		
		Europe/Madrid

- Add a "contrib" component to /etc/apt/sources.list, for example:
	deb http://httpredir.debian.org/debian/ jessie main contrib
	
- Update the list of available packages and install the java-package package:
	
	apt-get update
	apt-get install java-package libgl1-mesa-glx libxslt1.1  libxtst6 libxxf86vm1
	make-jpkg jdk-8u51-linux-x64.tar.gz
	dpkg -i oracle-java8-jdk_8u51_amd64.deb

- Actualizar paquetes del sistema

	apt-get update
	apt-get upgrade

- Instalar utilidades y herramientas necesarias

	apt-get install mc nano
	
- Instalar utilidades y herramientas necesariasapt-get update

	apt-get install iptables
	apt-get install netcat-traditional
	apt-get install ntp

	apt-get install subversion
	apt-get install openjdk-7-jdk
	apt-get install maven2
	
	apt-get install tomcat7

	apt-get install postgresql-9.1

- Instalar el jai-fix en /usr/lib/jvm

- Verificar que Postgresql está utilizando UTF8

	su - postgres
	psql -l

	debe salir algo como esto:

                                      Listado de base de datos
        Nombre        |  Dueño   | Codificación |   Collate   |    Ctype    |      Privilegios      
----------------------+----------+--------------+-------------+-------------+-----------------------
 postgres             | postgres | UTF8         | es_ES.UTF-8 | es_ES.UTF-8 | 
 template0            | postgres | UTF8         | es_ES.UTF-8 | es_ES.UTF-8 | =c/postgres          +
                      |          |              |             |             | postgres=CTc/postgres
 template1            | postgres | UTF8         | es_ES.UTF-8 | es_ES.UTF-8 | =c/postgres          +
                      |          |              |             |             | postgres=CTc/postgres
(6 filas)

- Configurar derechos en Postgres
   
   nano /etc/postgresql/9.1/main/pg_hba.conf 
   
   Localizar y dejar las siguientes dos lineas como sigue:
   
    local   all             all                                     trust
	host    all             all             127.0.0.1/32            trust

- Salir de usuario postgres, volver a root y reiniciar postgres

   exit 
   service postgresql reload
   
- Descargar ultima versión de dcm4chee de aquí: http://sourceforge.net/projects/dcm4che/files/dcm4chee/ y descomprimir en /opt/dcm4chee

- Con la versión de jboss guardada ejecutar

	cd /opt/dcm4chee/bin
	./install-jboss.sh <path to jboss GA>
	
- Modificar los puertos del jboss en el fichero /opt/dcm4chee/server/default/deploy/jboss-web.deployer/server.xml

    <Connector port="7080" address="${jboss.bind.address}"    
         maxThreads="250" maxHttpHeaderSize="8192"
         emptySessionPath="true" protocol="HTTP/1.1"
         enableLookups="false" redirectPort="7443" acceptCount="100"
         connectionTimeout="20000" disableUploadTimeout="true" />

	<Connector port="7443" protocol="HTTP/1.1" SSLEnabled="true"
		.....
		
	<Connector port="7009" address="${jboss.bind.address}" protocol="AJP/1.3"
         emptySessionPath="true" enableLookups="false" redirectPort="7443" />

- Crear base de datos del pacs

	su - postgres
	createdb pacsdb
	psql pacsdb -f /opt/dcm4chee/sql/create.psql

- Crear el servicio dcm4chee en /etc/init.d

	nano /opt/dcm4chee/bin/dcm4chee
	
		#!/bin/sh
		#
		### BEGIN INIT INFO
		# Provides:          dcm4chee
		# Required-Start:    $local_fs $remote_fs $network
		# Required-Stop:     $local_fs $remote_fs $network
		# Should-Start:      $named
		# Should-Stop:       $named
		# Default-Start:     2 3 4 5
		# Default-Stop:      0 1 6
		# Short-Description: Start DCM4CHEE.
		# Description:       Start DCM4CHEE.
		### END INIT INFO

		export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
		JBOSS_HOME=/opt/dcm4chee
		JAVAPTH=$JAVA_HOME/bin

		if [ -z "‘echo $PATH | grep $JAVAPTH‘" ]; then
		export PATH=$PATH:$JAVAPTH
		fi
		if [ ! -d "$JBOSS_HOME" ]; then
		echo JBOSS_HOME does not exist as a valid directory : $JBOSS_HOME
		exit 1
		fi

		case "$1" in
				start)
						echo -n "Starting JBoss application server "
						echo ""
						$JBOSS_HOME/bin/run.sh > /dev/null 2>&1 &
				;;
				stop)
						echo -n "Shutting down JBoss application server "
						echo ""
						$JBOSS_HOME/bin/shutdown.sh -s localhost:1099 -u admin -p admin -S
				;;
				restart)
						$0 stop
						$0 start
				;;
		esac

		exit 0
	
	cd /etc/init.d
	ln -s /opt/dcm4chee/bin/dcm4chee dcm4chee
    chmod a+x /opt/dcm4chee/bin/dcm4chee
    chmod a+x /opt/dcm4chee/bin/*.sh
    update-rc.d dcm4chee defaults
	service dcm4chee start
	
- Crear carpeta /home/dcm4chee como root

- Abrir en un navegador <host>:7080 e ir a JMX Console, user=admin, password=admin

	en el servicio service=AE

		- invocar updateAETitle con pk = 1, aet = IMEDIG, port=11112

	en el servicio group=ONLINE_STORAGE,service=FileSystemMgt
	
		- crear el ONLINE_STORAGE /home/dcm4chee
		- DeleteStudyIfNotAccessedFor = 365d
		- MinimumFreeDiskSpace = 10.0GB
		- DeleteStudyOnlyIfCopyOnFileSystemOfFileSystemGroup = NONE
	
- Enviar imágenes de prueba

	/opt/imedig/utils/store-images.sh
	
- Agregar la carpeta /opt/enermet/conf en el classpath de tomcat:

	nano /var/lib/tomcat7/conf/catalina.properties 
  
  localizar la línea y agregar al final esto:
  
	shared.loader=.......,/opt/imedig/conf

- Modificar esta línea en /etc/tomcat7/server.xml

	<Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" appContextProtection="false" />

- Ejecutar tomcat7 como root y asignar las opciones de la JVM

	nano /etc/default/tomcat7
	
		TOMCAT7_USER=root
		TOMCAT7_GROUP=root
		JAVA_OPTS="-Djava.awt.headless=true -Xms2048m -Xmx2048m -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -XX:PermSize=512m -XX:+TraceClassUnloading"		
		
- Reinciar tomcat

	service tomcat7 restart

- Crear la carpeta /opt/imedig

	como usuario root
	
	mkdir /opt/imedig
	
	mkdir /opt/imedig/conf
	mkdir /opt/imedig/cache
	mkdir /opt/imedig/deploy
	
- Editar fichero /opt/imedig/conf/imedig.properties con el siguiente contenido:

	IMEDIG_Auth=false

	IMEDIG_AETitle = IMEDIG
	IMEDIG_Serial = GT_002
	IMEDIG_Port = 8080
	ConfigPassword = 63A9F0EA7BB98050796B649E85481845
	License =
	Languages = es
	CLOUD_Url = http://www.imedig.com:9080
	Cache_TTL = 60
	Cache_MaxSize = 1024
	Cache_CheckPeriod = 60

	PACS_AETitle = DCM4CHEE
	PACS_Host = localhost
	PACS_Port = 11112

	ETH0_ADDRESS = 192.168.1.253
	ETH0_NETMASK = 255.255.255.0
	ETH0_GATEWAY = 192.168.1.1
	ETH0_DNS1 = 8.8.8.8
	ETH0_DNS2 =
	ETH0_DNS3 =

	ETH0_1_ADDRESS = 192.168.94.20
	ETH0_1_NETMASK = 255.255.255.0

- Desplegar los servicios de la aplicación

	service tomcat7 stop
	cd /var/lib/tomcat7/webapps
	ln -s /opt/imedig/deploy/imedig-viewer.war imedig-viewer.war
	service tomcat7 start

- verficar que las aplicaciones levantaron correctamente
  
	tail -f /var/log/tomcat7/logs/catalina.out 
	
- Configurar el firewall 
    
    mkdir /opt/firewall 

    nano /opt/firewall/firewall

		#!/bin/sh

		### BEGIN INIT INFO
		# Provides:          firewall
		# Required-Start:    $local_fs
		# Required-Stop:     $local_fs
		# Should-Start:
		# Should-Stop:
		# Default-Start:     2 3 4 5
		# Default-Stop:      0 1 6
		# Short-Description: Start Firewall
		# Description:       Start IPTables firewall
		### END INIT INFO

		echo 1 > /proc/sys/net/ipv4/ip_forward

		iptables --flush
		iptables --table nat --flush
		iptables --delete-chain
		iptables --table nat --delete-chain

		iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
		iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
		iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
		iptables -A INPUT -i lo -j ACCEPT
		iptables -A INPUT -p icmp --icmp-type 8 -s 0/0  -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
		iptables -A OUTPUT -p icmp --icmp-type 0 -d 0/0 -m state --state ESTABLISHED,RELATED -j ACCEPT

		# tomcat
		iptables -A INPUT -p tcp -m tcp --dport 8080 -j ACCEPT

		# ssh
		iptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT

		# dcm4chee
		iptables -A INPUT -p tcp -m tcp --dport 7080 -j ACCEPT
		iptables -A INPUT -p tcp -m tcp --dport 11112 -j ACCEPT

		iptables -I INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

		iptables -P OUTPUT ACCEPT
		iptables -P INPUT DROP
    
	cd /etc/init.d
	ln -s /opt/firewall/firewall firewall
    chmod a+x /opt/firewall/firewall
    update-rc.d firewall defaults
	service firewall start

- Editar fichero /opt/imedig/conf/interfaces

	#
	# Automatically generated by IMEDIG
	#

	#
	# We always want the loopback interface.
	#
	auto lo
	iface lo inet loopback

	auto eth0
	iface eth0 inet static
	address 192.168.1.253
	netmask 255.255.255.0
	gateway 192.168.1.1

	auto eth0:1
	iface eth0:1 inet static
	address 192.168.94.20
	netmask 255.255.255.0

- Editar fichero /opt/imedig/conf/resolv.conf

	nameserver 8.8.8.8

- Crear enlaces de /etc/network/interfaces y /etc/resolv.conf a /opf/imedig/conf/interfaces y resolv.conf respectivamente

- Asegurar que la copia de disco de esta instalación funcione igual en otro hardware. Si el hardware tiene dos interfaces de red esto no funcionaría 

	nano /etc/udev/rules.d/70-persistent-net.rules
	
		SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="**:**:**:**:**:**", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

- Copiar 12GB de imagen del disco a fichero

	dd if=/dev/sda of=<path>/imedig.img bs=4096 count=3145728; sync

- Restaurar 12 GB de un fichero a cada disco

	dd of=/dev/sda if=<path>/imedig.img bs=4096 count=3145728; sync
	dd of=/dev/sdb if=<path>/imedig.img bs=4096 count=3145728; sync

